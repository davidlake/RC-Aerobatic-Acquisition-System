/*
 * ICM20948_Registers.h
 *
 *  Created on: 11 abr. 2021
 *      Author: dlago
 */

#ifndef ICM20948_INC_ICM20948_REGISTERS_H_
#define ICM20948_INC_ICM20948_REGISTERS_H_

// Register addresses, bit field positions and possible values

typedef enum _ICM20948_BOOL_REG_VAL
{
	ICM20948_True = 1,
	ICM20948_False = 0,
}ICM20948_BOOL_REG_VAL;

//REG_BANK_SEL
#define ICM20948_ADDR_REG_BANK_SEL			0x7F
typedef enum _ICM20948_ADDR_REG_BANK_SEL_VAL
{
	BANK_0 = (0<<4),
	BANK_1 = (1<<4),
	BANK_2 = (2<<4),
	BANK_3 = (3<<4),
}  ICM20948_ADDR_REG_BANK_SEL_VAL;

//BANK 0--------------------------------------------------------------------------------------------
//WHO_AM_I
#define ICM20948_ADDR_WHO_AM_I				0x00
//USER_CTRL
#define ICM20948_ADDR_USER_CTRL				0x03
#define ICM20948_USER_CTRL_I2C_MST_RST				(1)
#define ICM20948_USER_CTRL_SRAM_RST					(2)
#define ICM20948_USER_CTRL_DMP_RST					(3)
#define ICM20948_USER_CTRL_I2C_IF_DIS				(4)
#define ICM20948_USER_CTRL_I2C_MST_EN				(5)
#define ICM20948_USER_CTRL_FIFO_EN					(6)
#define ICM20948_USER_CTRL_DMP_EN					(7)
//LP_CONFIG
#define ICM20948_ADDR_LP_CONFIG				0x05
#define ICM20948_LP_CONFIG_GYRO_CYCLE				(4)
#define ICM20948_LP_CONFIG_ACCEL_CYCLE				(5)
#define ICM20948_LP_CONFIG_I2CMST_CYCLE				(6)
//PWR_MGMT_1
#define ICM20948_ADDR_PWR_MGMT1				0x06
#define ICM20948_PWR_MGMT_1_CLKSEL					(0)
typedef enum _ICM20948_PWR_MGMT_1_CLKSEL_VAL
{
	INTERN_20MHZ = 0,
	AUTO = 1,
	STOP = 7,
} ICM20948_PWR_MGMT_1_CLKSEL_VAL;
#define ICM20948_PWR_MGMT_1_TEMP_DIS				(3)
#define ICM20948_PWR_MGMT_1_LP_EN					(5)
#define ICM20948_PWR_MGMT_1_SLEEP					(6)
typedef enum _ICM20948_PWR_MGMT_1_SLEEP_VAL
{
	SLEEP = 1,
	WAKEUP = 0,
} ICM20948_PWR_MGMT_1_SLEEP_VAL;
#define ICM20948_PWR_MGMT_1_DEVICE_RESET				(1<<7)
//PWR_MGMT_2
#define ICM20948_ADDR_PWR_MGMT2				0x07
#define ICM20948_PWR_MGMT2_DISABLE_GYRO				(0)
#define ICM20948_PWR_MGMT2_DISABLE_ACCEL			(3)
typedef enum _ICM20948_PWR_MGMT_2_VAL
{
	ICM20948_SENSOR_DISABLE = 7,
	ICM20948_SENSOR_ENABLE = 0,
} ICM20948_PWR_MGMT_2_VAL;
//I2C_MST_STATUS
#define ICM20948_ADDR_I2C_MSC_STATUS		0x17
#define ICM20948_I2C_MSC_STATUS_I2C_SLV0_NACK		(0)
#define ICM20948_I2C_MSC_STATUS_I2C_SLV1_NACK		(1)
#define ICM20948_I2C_MSC_STATUS_I2C_SLV2_NACK		(2)
#define ICM20948_I2C_MSC_STATUS_I2C_SLV3_NACK		(3)
#define ICM20948_I2C_MSC_STATUS_I2C_SLV4_NACK		(4)
#define ICM20948_I2C_MSC_STATUS_I2C_LOST_ARB		(5)
#define ICM20948_I2C_MSC_STATUS_I2C_SLV4_DONE		(6)
#define ICM20948_I2C_MSC_STATUS_PASS_THROUGH		(7)
//INT_STATUS_1
#define ICM20948_ADDR_INT_STATUS_1			0x1A
#define ICM20948_INT_STATUS_1_RAW_DATA_0_RDY_INT	(0)
//ACCEL_OUT (first data reg address) x6 bytes
#define ICM20948_ADDR_ACCEL_XOUT_H			0x2D
//GYRO_OUT (first data reg address)	x6 bytes
#define ICM20948_ADDR_GYRO_XOUT_H			0x33
//TEMP_OUT (first data reg address) x2 bytes
#define ICM20948_ADDR_TEMP_OUT_H			0x39
//EXT_SLV_SENS_DATA_00 (first register with magnetometer status1)
#define ICM20948_ADDR_EXT_SLV_SENS_DATA_00	0x3B
//EXT_SLV_SENS_DATA_01 (first register with magneto sensor data) x6 bytes
#define ICM20948_ADDR_EXT_SLV_SENS_DATA_01	0x3C

//BANK 1--------------------------------------------------------------------------------------------
//ACCELEROMETER OFFSET (first data reg address) x6 bytes
#define ICM20948_ADDR_XA_OFFS_H				0x14

//BANK 2--------------------------------------------------------------------------------------------
//GYRO_SMPLRT_DIV
#define ICM20948_ADDR_GYRO_SMPLRT_DIV		0x00
//Accepts uint8_t: 0-255 value
//GYRO_CONFIG_1
#define ICM20948_ADDR_GYRO_CONFIG_1			0x01
#define ICM20948_GYRO_FCHOICE						(0)
typedef enum _ICM20948_SENSOR_FCHOICE_VAL
{
	ICM20948_DLPF_Enabled = 1,
	ICM20948_DLPF_Disabled = 0,
}ICM20948_SENSOR_FCHOICE_VAL;
#define ICM20948_GYRO_FS_SEL						(1)
typedef enum _ICM20948_GYRO_FS_SEL_VAL
{
	ICM20948_Gyro_250dps = 0,
	ICM20948_Gyro_500dps = 1,
	ICM20948_Gyro_1000dps = 2,
	ICM20948_Gyro_2000dps = 3,
}ICM20948_GYRO_FS_SEL_VAL;
#define ICM20948_GYRO_DLPFCFG						(3)
typedef enum _ICM20948_GYRO_DLPFCFG_VAL
{
	ICM20948_Gyro_197Hz_DLPF = 0,
	ICM20948_Gyro_152Hz_DLPF = 1,
	ICM20948_Gyro_120Hz_DLPF = 2,
	ICM20948_Gyro_51Hz_DLPF = 3,
	ICM20948_Gyro_24Hz_DLPF = 4,
	ICM20948_Gyro_12Hz_DLPF = 5,
	ICM20948_Gyro_6Hz_DLPF = 6,
	ICM20948_Gyro_361Hz_DLPF = 7,
}ICM20948_GYRO_DLPFCFG_VAL;
//GYRO_CONFIG_2
#define ICM20948_ADDR_GYRO_CONFIG_2			0x02
#define ICM20948_GYRO_CONFIG_2_GYRO_AVGCFG			(0)
typedef enum _ICM20948_GYRO_CONFIG_2_GYRO_AVGCFG_VAL
{
	ICM20948_GYRO_AVGCFG_1x = 0,
	ICM20948_GYRO_AVGCFG_2x = 1,
	ICM20948_GYRO_AVGCFG_4x = 2,
	ICM20948_GYRO_AVGCFG_8x = 3,
	ICM20948_GYRO_AVGCFG_16x = 4,
	ICM20948_GYRO_AVGCFG_32x = 5,
	ICM20948_GYRO_AVGCFG_64x = 6,
	ICM20948_GYRO_AVGCFG_128x = 7,
}ICM20948_GYRO_CONFIG_2_GYRO_AVGCFG_VAL;
#define ICM20948_GYRO_CONFIG_2_ZGYRO_CTEN			(3)
#define ICM20948_GYRO_CONFIG_2_YGYRO_CTEN			(4)
#define ICM20948_GYRO_CONFIG_2_XGYRO_CTEN			(5)
//GYRO OFFSET (first data reg address) x6 bytes
#define ICM20948_ADDR_XG_OFFS_USRH			0x03
//ACCEL_SMPLRT_DIV_1
#define ICM20948_ADDR_ACCEL_SMPLRT_DIV_1	0x10
//MSB for accel sample rate div -> values from 0 to 15
//ACCEL_SMPLRT_DIV_2
#define ICM20948_ADDR_ACCEL_SMPLRT_DIV_2	0x11
//LSB for accel sample rate div -> values from 0 to 255
//ACCEL_CONFIG
#define ICM20948_ADDR_ACCEL_CONFIG			0x14
#define ICM20948_ACCEL_CONFIG_ACCEL_FCHOICE			(0)
#define ICM20948_ACCEL_CONFIG_ACCEL_FS_SEL			(1)
typedef enum _ICM20948_ACCEL_FS_SEL_VAL
{
	ICM20948_Accel_2g = 0,
	ICM20948_Accel_4g = 1,
	ICM20948_Accel_8g = 2,
	ICM20948_Accel_16g = 3,
}ICM20948_ACCEL_FS_SEL_VAL;
#define ICM20948_ACCEL_CONFIG_ACCEL_DLPFCFG			(3)
typedef enum _ICM20948_ACCEL_DLPFCFG_VAL
{
	ICM20948_Accel_246Hz_DLPF = 0,
	ICM20948_Accel_246rHz_DLPF = 1,
	ICM20948_Accel_111Hz_DLPF = 2,
	ICM20948_Accel_50Hz_DLPF = 3,
	ICM20948_Accel_24Hz_DLPF = 4,
	ICM20948_Accel_12Hz_DLPF = 5,
	ICM20948_Accel_6Hz_DLPF = 6,
	ICM20948_Accel_473Hz_DLPF = 7,
}ICM20948_ACCEL_DLPFCFG_VAL;
//ACCEL_CONFIG_2
#define ICM20948_ADDR_ACCEL_CONFIG_2		0x15
#define ICM20948_ACCEL_CONFIG_2_DEC3_CFG			(0)
typedef enum _ICM20948_ACCEL_CONFIG_2_DEC3_CFG_VAL
{
	ICM20948_Accel_AVGCFG_1or4s = 0,
	ICM20948_Accel_AVGCFG_8s = 1,
	ICM20948_Accel_AVGCFG_16s = 2,
	ICM20948_Accel_AVGCFG_32s = 3,
}ICM20948_ACCEL_CONFIG_2_DEC3_CFG_VAL;
#define ICM20948_ACCEL_CONFIG_2_AZ_ST_EN_REG		(2)
#define ICM20948_ACCEL_CONFIG_2_AY_ST_EN_REG		(3)
#define ICM20948_ACCEL_CONFIG_2_AX_ST_EN_REG		(4)
//TEMP_CONFIG
#define ICM20948_ADDR_TEMP_CONFIG			0x53
typedef enum _ICM20948_TEMP_CONFIG_TEMP_DLPFCFG_VAL
{
	ICM20948_Temp_DLPCFG_7932Hz = 0,
	ICM20948_Temp_DLPCFG_218Hz = 1,
	ICM20948_Temp_DLPCFG_124Hz = 2,
	ICM20948_Temp_DLPCFG_66Hz = 3,
	ICM20948_Temp_DLPCFG_34Hz = 4,
	ICM20948_Temp_DLPCFG_17Hz = 5,
	ICM20948_Temp_DLPCFG_9Hz = 6,
}ICM20948_TEMP_CONFIG_TEMP_DLPFCFG_VAL;

//BANK 3--------------------------------------------------------------------------------------------
//I2C_MST_CTRL
#define ICM20948_ADDR_I2C_MST_CTRL			0x01
#define ICM20948_I2C_MST_CTRL_I2C_MST_CLK			(0)
#define ICM20948_I2C_MST_CTRL_I2C_MST_P_NSR			(4)
#define ICM20948_I2C_MST_CTRL_MULT_MST_EN			(7)
//SLV0
#define ICM20948_ADDR_I2C_SLV0_ADDR			0x03
#define ICM20948_ADDR_I2C_SLV0_REG			0x04
#define ICM20948_ADDR_I2C_SLV0_CTRL			0x05
#define ICM20948_ADDR_I2C_SLV0_DO			0x06
//SLV1
#define ICM20948_ADDR_I2C_SLV1_ADDR			0x07
#define ICM20948_ADDR_I2C_SLV1_REG			0x08
#define ICM20948_ADDR_I2C_SLV1_CTRL			0x09
#define ICM20948_ADDR_I2C_SLV1_DO			0x0A
//SLV2
#define ICM20948_ADDR_I2C_SLV2_ADDR			0x0B
#define ICM20948_ADDR_I2C_SLV2_REG			0x0C
#define ICM20948_ADDR_I2C_SLV2_CTRL			0x0D
#define ICM20948_ADDR_I2C_SLV2_DO			0x0E
//SLV3
#define ICM20948_ADDR_I2C_SLV3_ADDR			0x0F
#define ICM20948_ADDR_I2C_SLV3_REG			0x10
#define ICM20948_ADDR_I2C_SLV3_CTRL			0x11
#define ICM20948_ADDR_I2C_SLV3_DO			0x12
//SLV4
#define ICM20948_ADDR_I2C_SLV4_ADDR			0x13
#define ICM20948_ADDR_I2C_SLV4_REG			0x14
#define ICM20948_ADDR_I2C_SLV4_CTRL			0x15
#define ICM20948_ADDR_I2C_SLV4_DO			0x16
#define ICM20948_ADDR_I2C_SLV4_DI			0x17

#endif /* ICM20948_INC_ICM20948_REGISTERS_H_ */
